package com.example.fooddeliveryapp.service;

import com.example.fooddeliveryapp.model.Order;
import com.example.fooddeliveryapp.model.User;
import com.example.fooddeliveryapp.repository.OrderRepository;
import com.example.fooddeliveryapp.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class OrderService {

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private UserRepository userRepository;

    // ✅ Fix: Ensure user exists before creating order
    public Order placeOrder(Order order) {
        Optional<User> userOptional = userRepository.findById(order.getUser().getUserid());
        if (userOptional.isPresent()) {
            order.setUser(userOptional.get()); // ✅ Ensure User is set
            return orderRepository.save(order);
        } else {
            throw new RuntimeException("User with ID " + order.getUser().getUserid() + " not found.");
        }
    }

    public List<Order> getOrdersByUser(int userId) {
        return orderRepository.findByUser_Userid(userId);
    }

    public Optional<Order> getOrderById(int orderid) {
        return orderRepository.findById(orderid);
    }

    public void deleteOrder(int orderid) {
        orderRepository.deleteById(orderid);
    }
}